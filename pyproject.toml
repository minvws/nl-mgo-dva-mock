[tool.poetry]
name = "mock"
version = "0.8.0"
description = "Mock for Client SDK providing mock FHIR data."
license = "EUPL-1.2"
authors = ["Ministerie van Volksgezondheid, Welzijn en Sport"]
repository = "https://github.com/minvws/nl-mgo-dva-mock-private"

[tool.poetry.dependencies]
python = "^3.11"
uvicorn = "^0.34.2"
fastapi = "^0.115"
mypy = "^1.15"
requests = "^2.32"
opentelemetry-instrumentation-fastapi = "v0.49b0"
opentelemetry-exporter-otlp = "^1.27.0"
opentelemetry-api = "^1.27.0"
opentelemetry-sdk = "^1.27.0"
inject = "^5.2.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
httpx = "^0.28.1"
ruff = "^0.11"
faker = "^37.1"
codespell = "^2.4.1"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
cache-dir = "~/.cache/ruff"
include = [
    "pyproject.toml",
    "app/*.py",
    "tests/*.py",
]

[tool.ruff.lint]
select = ["TID251"]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"unittest".msg = "use pytest-mock instead"

[tool.mypy]
files = "app,tests"
python_version = "3.12"
strict = true
cache_dir = "~/.cache/mypy"

[tool.pytest.ini_options]
cache_dir = "~/.cache/pytest"
testpaths = [
    "tests",
]


[tool.codespell]
skip = [
    "./certs/*",
    "./static/*.js",
    "./fhir/resources/*",
]
